{"ast":null,"code":"var _jsxFileName = \"/app/src/components/Input.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ApiList from \"./ApiList\";\nimport FileUpload from \"./FileUpload\";\nimport OrgText from \"./OrgText\";\nimport Loading from \"./Loading\";\nimport Toast from \"./Toast\";\nimport logo from \"../image/beanz_logo.png\";\nimport * as API from \"../api\";\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  border: none;\n  max-width: 250px;\n  background-color: rgb(250 250 250);\n  box-shadow: none;\n`;\nconst LogoImage = styled.img`\n  height: 100px;\n  margin-top: 30px;\n`;\nconst InputWrapper = styled.div`\n  display: flex;\n  width: 900px;\n  height: 60%;\n  border: none;\n  background-color: rgb(250 250 250);\n`;\nconst InputInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 40%;\n`;\nconst RunBtn = styled.button`\n  height: 50px;\n  width: 100px;\n  margin-bottom: 20px;\n  font-size: 1.5em;\n  text-align: center;\n  box-shadow: 0 0 3px rgba(0, 0, 0, 0.3);\n  cursor: pointer;\n  &:hover {\n    background-color: #ededed;\n  }\n`;\n\nconst Input = _ref => {\n  let {\n    setIndex,\n    setOrgText,\n    setApiResult\n  } = _ref;\n  const [apiName, setApiName] = useState({\n    Google: false,\n    Kakao: false,\n    Ibm: false,\n    Naver: false,\n    Azure: false\n  });\n  const [fileName, setFileName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(false);\n\n  const handleRun = async () => {\n    // 파일 입력이나 api 선택 중 하나라도 안된 경우 Toast 출력하고 함수 exit\n    if (fileName === \"\" || !(apiName.Kakao || apiName.Ibm || apiName.Naver || apiName.Google || apiName.Azure)) {\n      setIsEmpty(true);\n      return;\n    }\n\n    setLoading(true);\n    const result = {};\n    const data = new FormData();\n    data.append('file', fileName);\n\n    if (apiName.Kakao) {\n      const ret = await API.kakaoSTT(data);\n      result.Kakao = ret.data;\n    }\n\n    if (apiName.Ibm) {\n      const ret = await API.ibmWatsonSTT(data);\n      result.Ibm = ret.data;\n    }\n\n    if (apiName.Naver) {\n      const ret = await API.clovaSTT(data);\n      result.Naver = ret.data;\n    }\n\n    if (apiName.Google) {\n      const ret = await API.googleSTT(data);\n      result.Google = ret.data;\n    }\n\n    if (apiName.Azure) {\n      const ret = await API.azureSTT(data);\n      result.Azure = ret.data;\n    }\n\n    setIndex(0);\n    setApiResult(result);\n    setLoading(false); // // 파일 입력과 api 선택이 없으면 안되게\n    // if (fileName!==\"\" && (apiName.Kakao || apiName.Ibm || apiName.Naver || apiName.Google || apiName.Azure)) {\n    //   // setLoading(true);\n    //   setIndex(0);\n    //   setApiResult(result);\n    //   setLoading(false);\n    // }\n    // else {\n    //   // 파일 입력과 api 선택이 없으면 입력 요구 문구\n    //   setIsEmpty(true);\n    // }\n  }; // Toast 실행을 위한 isEmpty state 관리\n\n\n  useEffect(() => {\n    if (isEmpty) {\n      setTimeout(() => setIsEmpty(false), 2000);\n    }\n  }, [isEmpty]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, loading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LogoImage, {\n    src: logo,\n    alt: \"logo image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InputWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ApiList, {\n    apiName: apiName,\n    setApiName: setApiName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InputInfoWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FileUpload, {\n    setFileName: setFileName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(OrgText, {\n    setOrgText: setOrgText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(RunBtn, {\n    onClick: handleRun,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"Run \\u25B6\\uFE0F\"), isEmpty && /*#__PURE__*/React.createElement(Toast, {\n    msg: \"\\uD30C\\uC77C \\uC785\\uB825\\uACFC api\\uB97C \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 23\n    }\n  })));\n};\n\nexport default Input;","map":{"version":3,"sources":["/app/src/components/Input.js"],"names":["React","useState","useEffect","styled","ApiList","FileUpload","OrgText","Loading","Toast","logo","API","Wrapper","div","LogoImage","img","InputWrapper","InputInfoWrapper","RunBtn","button","Input","setIndex","setOrgText","setApiResult","apiName","setApiName","Google","Kakao","Ibm","Naver","Azure","fileName","setFileName","loading","setLoading","isEmpty","setIsEmpty","handleRun","result","data","FormData","append","ret","kakaoSTT","ibmWatsonSTT","clovaSTT","googleSTT","azureSTT","setTimeout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport ApiList from \"./ApiList\";\nimport FileUpload from \"./FileUpload\";\nimport OrgText from \"./OrgText\";\nimport Loading from \"./Loading\";\nimport Toast from \"./Toast\";\nimport logo from \"../image/beanz_logo.png\";\nimport * as API from \"../api\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  border: none;\n  max-width: 250px;\n  background-color: rgb(250 250 250);\n  box-shadow: none;\n`;\n\nconst LogoImage = styled.img`\n  height: 100px;\n  margin-top: 30px;\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  width: 900px;\n  height: 60%;\n  border: none;\n  background-color: rgb(250 250 250);\n`;\n\nconst InputInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 40%;\n`;\n\nconst RunBtn = styled.button`\n  height: 50px;\n  width: 100px;\n  margin-bottom: 20px;\n  font-size: 1.5em;\n  text-align: center;\n  box-shadow: 0 0 3px rgba(0, 0, 0, 0.3);\n  cursor: pointer;\n  &:hover {\n    background-color: #ededed;\n  }\n`;\n\nconst Input = ({ setIndex, setOrgText, setApiResult }) => {\n  const [apiName, setApiName] = useState({\n    Google: false,\n    Kakao: false,\n    Ibm: false,\n    Naver: false,\n    Azure: false,\n  });\n  const [fileName, setFileName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(false);\n\n  const handleRun = async () => {\n    // 파일 입력이나 api 선택 중 하나라도 안된 경우 Toast 출력하고 함수 exit\n    if (fileName===\"\" || !(apiName.Kakao || apiName.Ibm || apiName.Naver || apiName.Google || apiName.Azure)) {\n      setIsEmpty(true);\n      return;\n    }\n    setLoading(true);\n    const result = {};\n    const data = new FormData();\n    data.append('file', fileName);\n    if (apiName.Kakao) {\n        const ret = await API.kakaoSTT(data);\n        result.Kakao = ret.data;\n    }\n    if (apiName.Ibm) {\n        const ret = await API.ibmWatsonSTT(data);\n        result.Ibm = ret.data;\n    }\n    if (apiName.Naver) {\n        const ret = await API.clovaSTT(data);\n        result.Naver = ret.data;\n    }\n    if (apiName.Google) {\n        const ret = await API.googleSTT(data);\n        result.Google = ret.data; \n    }\n    if (apiName.Azure) {\n        const ret = await API.azureSTT(data);\n        result.Azure = ret.data;\n    }\n    setIndex(0);\n    setApiResult(result);\n    setLoading(false);\n    // // 파일 입력과 api 선택이 없으면 안되게\n    // if (fileName!==\"\" && (apiName.Kakao || apiName.Ibm || apiName.Naver || apiName.Google || apiName.Azure)) {\n    //   // setLoading(true);\n    //   setIndex(0);\n    //   setApiResult(result);\n    //   setLoading(false);\n    // }\n    // else {\n    //   // 파일 입력과 api 선택이 없으면 입력 요구 문구\n    //   setIsEmpty(true);\n    // }\n}\n  // Toast 실행을 위한 isEmpty state 관리\n  useEffect(() => {\n    if (isEmpty) {\n      setTimeout(() => setIsEmpty(false), 2000);\n    }\n  }, [isEmpty]);\n\n  return (\n    <>\n      {loading ? (\n        <Loading />\n      ) : (\n        <Wrapper>\n          <LogoImage src={logo} alt=\"logo image\" />\n          <InputWrapper>\n            <ApiList apiName={apiName} setApiName={setApiName} />\n            <InputInfoWrapper>\n              <FileUpload setFileName={setFileName} />\n              <OrgText setOrgText={setOrgText} />\n            </InputInfoWrapper>\n          </InputWrapper>\n          <RunBtn onClick={handleRun}>Run ▶️</RunBtn>\n          {isEmpty && <Toast msg=\"파일 입력과 api를 선택해주세요.\"/>}\n        </Wrapper>\n      )}\n    </>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}